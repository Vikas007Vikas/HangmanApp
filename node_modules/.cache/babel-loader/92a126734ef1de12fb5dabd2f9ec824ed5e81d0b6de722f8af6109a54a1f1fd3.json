{"ast":null,"code":"var _jsxFileName = \"/home/vkamineni/Documents/LightHall/level3/vikas_hangman/src/components/gameboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport UsernameForm from \"./UsernameForm\";\nimport PropTypes from \"prop-types\";\nimport \"./Gameboard.css\";\nimport { db } from '../base';\nimport { collection, addDoc } from 'firebase/firestore';\nimport NavBar from \"./NavBar\";\nimport { decode } from \"base-64\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Gameboard = _ref => {\n  _s();\n  let {\n    maxGuesses,\n    onGameOver\n  } = _ref;\n  const [word, setWord] = useState(\"\");\n  const [guesses, setGuesses] = useState([]);\n  const [correctGuesses, setCorrectGuesses] = useState([]);\n  const [incorrectGuesses, setInCorrectGuesses] = useState([]);\n  const [gameOver, setGameOver] = useState(false);\n  const [gameResult, setGameResult] = useState(false); // initially game is not won\n  const [isComplete, setIsComplete] = useState(false);\n  const [remainingGuesses, setRemainingGuesses] = useState(maxGuesses);\n  const [username, setUsername] = useState(\"\");\n  const [gameStatus, setGameStatus] = useState(\"NotStarted\");\n  const [fromUrl, setFromUrl] = useState(false);\n  const [score, setScore] = useState(0);\n  const navigate = useNavigate();\n  const [hangmanImages, setHangmanImages] = useState([\"/HangmanApp/images/0.jpg\", \"/HangmanApp/images/1.jpg\", \"/HangmanApp/images/2.jpg\", \"/HangmanApp/images/3.jpg\", \"/HangmanApp/images/4.jpg\", \"/HangmanApp/images/5.jpg\", \"/HangmanApp/images/6.jpg\"]);\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const url_word = urlParams.get('word');\n    if (url_word) {\n      setWord(decode(url_word).toLowerCase());\n      setFromUrl(true);\n    } else if (!word) {\n      fetch(\"https://random-word-api.herokuapp.com/word?number=1\").then(response => response.json()).then(data => setWord(data[0].toLowerCase())).catch(error => console.log(error));\n    }\n    if (remainingGuesses === 0) {\n      setGameResult(false);\n      setGameOver(true);\n    } else if (remainingGuesses >= 1 && isComplete) {\n      setGameResult(true);\n      setScore(score + remainingGuesses * 10);\n    }\n  }, [guesses, isComplete]);\n  useEffect(() => {}, []);\n  const handleGuess = event => {\n    const guess = event.target.value.toLowerCase();\n    const button = event.target;\n    if (!guess) {\n      return;\n    }\n    let updatedGuesses = guesses;\n    let updatedCorrectGuesses = correctGuesses;\n    let updatedIncorrectGuesses = incorrectGuesses;\n    let updatedRemainingGuesses = remainingGuesses;\n    // let updatedHangmanImages = hangmanImages;\n\n    if (!guesses.includes(guess)) {\n      updatedGuesses = [...updatedGuesses, guess];\n      setGuesses(updatedGuesses);\n      if (!word.includes(guess)) {\n        updatedIncorrectGuesses = [...updatedIncorrectGuesses, guess];\n        updatedRemainingGuesses = updatedRemainingGuesses - 1;\n        setInCorrectGuesses(updatedIncorrectGuesses);\n        setRemainingGuesses(updatedRemainingGuesses);\n        score - 10 < 0 ? setScore(0) : setScore(score - 10);\n      } else {\n        updatedCorrectGuesses = [...updatedCorrectGuesses, guess];\n        setCorrectGuesses(updatedCorrectGuesses);\n        setScore(score + 10);\n      }\n    }\n\n    // checkWordComplete();\n    let isComplete = word.split(\"\").every(letter => updatedCorrectGuesses.includes(letter));\n    if (updatedRemainingGuesses === 0 && !isComplete) {\n      setGameOver(true);\n      return;\n    }\n    if (updatedRemainingGuesses >= 1 && isComplete) {\n      setIsComplete(true);\n      return;\n    }\n    button.classList.add(\"disabled\");\n  };\n  const handleReset = () => {\n    setWord(\"\");\n    setGuesses([]);\n    setCorrectGuesses([]);\n    setInCorrectGuesses([]);\n    setGameOver(false);\n    setGameResult(false);\n    setIsComplete(false);\n    setRemainingGuesses(maxGuesses);\n    onGameOver(false);\n    const buttons = document.querySelectorAll(\"button\");\n    buttons.forEach(button => {\n      button.classList.remove(\"disabled\"); // re-enable the buttons\n    });\n\n    if (fromUrl) {\n      navigate(\"/HangmanApp/gameboard\");\n      window.location.reload();\n    }\n  };\n  const renderWord = () => {\n    return word.split(\"\").map((letter, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Gameboard-letter-box\",\n      children: guesses.includes(letter) ? /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"Gameboard-letter\",\n        children: letter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"Gameboard-letter\",\n        children: \"_\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this));\n  };\n  const handleUsernameSubmit = async () => {\n    if (username.trim() === \"\") {\n      alert(\"Please enter a valid username\");\n      return;\n    }\n    await addDoc(collection(db, \"users\"), {\n      name: username,\n      score: score\n    });\n    navigate(\"/HangmanApp/leaderboard\");\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"GameBoard-Container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          width: \"100%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(NavBar, {\n          navigateToGameBoard: () => {\n            navigate(\"/HangmanApp/gameboard\");\n          },\n          navigateToLeaderBoard: () => {\n            navigate(\"/HangmanApp/leaderboard\");\n          },\n          navigateToChallenge: () => {\n            navigate(\"/HangmanApp/challenge\");\n          },\n          navigateToHome: () => {\n            navigate(\"/HangmanApp/\");\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"GameBoardInfo d-flex justify-content-center align-items-center\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex flex-grow-1 justify-content-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"px-3 gameboard-info-box\",\n              style: {\n                color: \"darkgray\",\n                marginRight: \"10px\"\n              },\n              children: [\"Chances left: \", remainingGuesses]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"px-3 gameboard-info-box\",\n              style: {\n                color: \"darkgray\"\n              },\n              children: [\"Score: \", score]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Gameboard\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Hangman\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: hangmanImages[6 - remainingGuesses],\n              alt: \"Hangman\",\n              style: {\n                backgroundColor: \"black\",\n                borderRadius: \"10px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Gameboard-word\",\n            children: renderWord()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Gameboard-guesses\",\n            children: gameOver ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Game Lost !!!!!!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"The word was \\\"\", word, \"\\\".\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Score: \", score]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-primary\",\n                onClick: handleReset,\n                children: \"Try Again\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"Gameboard-buttons\",\n                children: Array.from({\n                  length: 26\n                }, (_, index) => String.fromCharCode(97 + index)).map(letter => /*#__PURE__*/_jsxDEV(\"button\", {\n                  value: letter,\n                  onClick: handleGuess,\n                  disabled: guesses.includes(letter),\n                  children: letter\n                }, letter, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 19\n              }, this)\n            }, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), gameResult && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"popup\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"popup-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Congratulations!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"You have guessed the word \\\"\", word, \"\\\".\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Score: \", score]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: username,\n                  onChange: e => setUsername(e.target.value),\n                  placeholder: \"Enter Name for leaderboard\",\n                  className: \"username-input\" // Add a class name for styling\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: handleUsernameSubmit,\n                  className: \"submit-btn\",\n                  children: \"Save Score\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 19\n              }, this), fromUrl ? /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-primary\",\n                onClick: handleReset,\n                children: \"Play New Game\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-primary\",\n                onClick: handleReset,\n                children: \"Play Again\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Gameboard, \"aTLU3wtK/GP5eXx36B2A61wkL6w=\", false, function () {\n  return [useNavigate];\n});\n_c = Gameboard;\nGameboard.propTypes = {\n  maxGuesses: PropTypes.number.isRequired,\n  onGameOver: PropTypes.func.isRequired\n};\nexport default Gameboard;\nvar _c;\n$RefreshReg$(_c, \"Gameboard\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","UsernameForm","PropTypes","db","collection","addDoc","NavBar","decode","jsxDEV","_jsxDEV","Fragment","_Fragment","Gameboard","_ref","_s","maxGuesses","onGameOver","word","setWord","guesses","setGuesses","correctGuesses","setCorrectGuesses","incorrectGuesses","setInCorrectGuesses","gameOver","setGameOver","gameResult","setGameResult","isComplete","setIsComplete","remainingGuesses","setRemainingGuesses","username","setUsername","gameStatus","setGameStatus","fromUrl","setFromUrl","score","setScore","navigate","hangmanImages","setHangmanImages","urlParams","URLSearchParams","window","location","search","url_word","get","toLowerCase","fetch","then","response","json","data","catch","error","console","log","handleGuess","event","guess","target","value","button","updatedGuesses","updatedCorrectGuesses","updatedIncorrectGuesses","updatedRemainingGuesses","includes","split","every","letter","classList","add","handleReset","buttons","document","querySelectorAll","forEach","remove","reload","renderWord","map","index","className","children","fileName","_jsxFileName","lineNumber","columnNumber","handleUsernameSubmit","trim","alert","name","style","display","flexDirection","width","navigateToGameBoard","navigateToLeaderBoard","navigateToChallenge","navigateToHome","color","marginRight","src","alt","backgroundColor","borderRadius","onClick","Array","from","length","_","String","fromCharCode","disabled","type","onChange","e","placeholder","_c","propTypes","number","isRequired","func","$RefreshReg$"],"sources":["/home/vkamineni/Documents/LightHall/level3/vikas_hangman/src/components/gameboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {useNavigate} from 'react-router-dom'\nimport UsernameForm from \"./UsernameForm\";\nimport PropTypes from \"prop-types\";\nimport \"./Gameboard.css\";\nimport {db} from '../base';\nimport {collection, addDoc} from 'firebase/firestore'\nimport NavBar from \"./NavBar\";\nimport { decode } from \"base-64\";\n\nconst Gameboard = ({ maxGuesses, onGameOver }) => {\n  const [word, setWord] = useState(\"\");\n  const [guesses, setGuesses] = useState([]);\n  const [correctGuesses, setCorrectGuesses] = useState([]);\n  const [incorrectGuesses, setInCorrectGuesses] = useState([]);\n  const [gameOver, setGameOver] = useState(false);\n  const [gameResult, setGameResult] = useState(false); // initially game is not won\n  const [isComplete, setIsComplete] = useState(false);\n  const [remainingGuesses, setRemainingGuesses] = useState(maxGuesses);\n  const [username,  setUsername] = useState(\"\");\n  const [gameStatus, setGameStatus] = useState(\"NotStarted\");\n  const [fromUrl, setFromUrl] = useState(false);\n  const [score, setScore] = useState(0);\n  const navigate = useNavigate();\n\n  const [hangmanImages, setHangmanImages] = useState([  \"/HangmanApp/images/0.jpg\",  \"/HangmanApp/images/1.jpg\",  \"/HangmanApp/images/2.jpg\",  \"/HangmanApp/images/3.jpg\",  \"/HangmanApp/images/4.jpg\",  \"/HangmanApp/images/5.jpg\",  \"/HangmanApp/images/6.jpg\",]);\n\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const url_word = urlParams.get('word');\n    if (url_word) {\n      setWord(decode(url_word).toLowerCase());\n      setFromUrl(true);\n    }\n    else if (!word) {\n      fetch(\"https://random-word-api.herokuapp.com/word?number=1\")\n        .then((response) => response.json())\n        .then((data) => setWord(data[0].toLowerCase()))\n        .catch((error) => console.log(error));\n    }\n\n    if(remainingGuesses === 0) {\n      setGameResult(false);\n      setGameOver(true);\n    }\n    else if(remainingGuesses >= 1 && isComplete) {\n      setGameResult(true);\n      setScore(score + remainingGuesses * 10);\n    }\n  }, [guesses, isComplete]);\n\n  useEffect(() => {\n\n  }, [])\n\n  const handleGuess = (event) => {\n    const guess = event.target.value.toLowerCase();\n    const button = event.target;\n\n    if (!guess) {\n      return;\n    }\n\n    let updatedGuesses = guesses;\n    let updatedCorrectGuesses = correctGuesses;\n    let updatedIncorrectGuesses = incorrectGuesses;\n    let updatedRemainingGuesses = remainingGuesses;\n    // let updatedHangmanImages = hangmanImages;\n\n    if (!guesses.includes(guess)) {\n      updatedGuesses = [...updatedGuesses, guess];\n      setGuesses(updatedGuesses);\n\n      if (!word.includes(guess)) {\n        updatedIncorrectGuesses = [...updatedIncorrectGuesses, guess];\n        updatedRemainingGuesses = updatedRemainingGuesses - 1;\n        setInCorrectGuesses(updatedIncorrectGuesses);\n        setRemainingGuesses(updatedRemainingGuesses);\n        score - 10 < 0 ? setScore(0) : setScore(score-10);\n      }\n      else {\n        updatedCorrectGuesses = [...updatedCorrectGuesses, guess];\n        setCorrectGuesses(updatedCorrectGuesses);\n        setScore(score + 10);\n      }\n    }\n\n    // checkWordComplete();\n    let isComplete = word.split(\"\").every((letter) => updatedCorrectGuesses.includes(letter));\n\n    if(updatedRemainingGuesses === 0 && !isComplete) {\n      setGameOver(true);\n      return;\n    }\n\n    if(updatedRemainingGuesses >= 1 && isComplete) {\n      setIsComplete(true);\n      return;\n    }\n\n    button.classList.add(\"disabled\");\n  };\n\n  const handleReset = () => {\n    setWord(\"\");\n    setGuesses([]);\n    setCorrectGuesses([]);\n    setInCorrectGuesses([]);\n    setGameOver(false);\n    setGameResult(false);\n    setIsComplete(false);\n    setRemainingGuesses(maxGuesses);\n    onGameOver(false);\n    const buttons = document.querySelectorAll(\"button\");\n    buttons.forEach((button) => {\n      button.classList.remove(\"disabled\"); // re-enable the buttons\n    });\n    if (fromUrl) {\n      navigate(\"/HangmanApp/gameboard\");\n      window.location.reload();\n    }\n  };\n\n  const renderWord = () => {\n    return word.split(\"\").map((letter, index) => (\n      <div key={index} className=\"Gameboard-letter-box\">\n        {guesses.includes(letter) ? (\n          <span className=\"Gameboard-letter\">{letter}</span>\n        ) : (\n          <span className=\"Gameboard-letter\">_</span>\n        )}\n      </div>\n    ));\n  };\n\n  const handleUsernameSubmit = async () => {\n    if (username.trim() === \"\") {\n      alert(\"Please enter a valid username\");\n      return;\n    }\n    \n    await addDoc(collection(db, \"users\"), {\n      name: username,\n      score: score\n    });\n\n    navigate(\"/HangmanApp/leaderboard\");\n  };\n\n  return (\n    <>\n      <div className=\"GameBoard-Container\">\n        <div style={{ display: \"flex\", flexDirection: \"column\", width: \"100%\" }}>\n          <NavBar \n          navigateToGameBoard={() => {navigate(\"/HangmanApp/gameboard\")}}\n          navigateToLeaderBoard={() => {navigate(\"/HangmanApp/leaderboard\")}}\n          navigateToChallenge={() => {navigate(\"/HangmanApp/challenge\")}}\n          navigateToHome={() => {navigate(\"/HangmanApp/\")}}/>\n          <div className=\"GameBoardInfo d-flex justify-content-center align-items-center\">\n            <div className=\"d-flex flex-grow-1 justify-content-center\">\n              <span className=\"px-3 gameboard-info-box\" style={{color: \"darkgray\", marginRight: \"10px\"}}>Chances left: {remainingGuesses}</span>\n              <span className=\"px-3 gameboard-info-box\" style={{color: \"darkgray\"}}>Score: {score}</span>\n            </div>\n          </div>\n          <div className=\"Gameboard\">\n            <div className=\"Hangman\">\n              <img src={hangmanImages[6 - remainingGuesses]} alt=\"Hangman\" style={{backgroundColor: \"black\", borderRadius: \"10px\"}}/>\n            </div>\n            <div className=\"Gameboard-word\">{renderWord()}</div>\n            <div className=\"Gameboard-guesses\">\n              {gameOver ? (\n                <>\n                  <p>Game Lost !!!!!!</p>\n                  <p>The word was \"{word}\".</p>\n                  <p>Score: {score}</p>\n                  <button className=\"btn btn-primary\" onClick={handleReset}>Try Again</button>\n                </>\n              ) : (\n                <>\n                  <div className=\"Gameboard-buttons\">\n                    {Array.from({ length: 26 }, (_, index) => String.fromCharCode(97 + index)).map((letter) => (\n                      <button key={letter} value={letter} onClick={handleGuess} disabled={guesses.includes(letter)}>\n                        {letter}\n                      </button>\n                    ))}\n                  </div>\n                </>\n              )}\n            </div>\n            {gameResult && \n              <div className=\"popup\">\n                <div className=\"popup-content\">\n                  <h2>Congratulations!</h2>\n                  <p>You have guessed the word \"{word}\".</p>\n                  <p>Score: {score}</p>\n                  <span>\n                    <input \n                      type=\"text\" \n                      value={username} \n                      onChange={(e) => setUsername(e.target.value)} \n                      placeholder=\"Enter Name for leaderboard\" \n                      className=\"username-input\" // Add a class name for styling\n                    />\n                    <button onClick={handleUsernameSubmit} className=\"submit-btn\">Save Score</button>\n                  </span>\n                  {fromUrl ?\n                    <button className=\"btn btn-primary\" onClick={handleReset}>Play New Game</button>\n                    :                \n                    <button className=\"btn btn-primary\" onClick={handleReset}>Play Again</button>\n                  }\n                </div>\n              </div>\n            }\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nGameboard.propTypes = {\n  maxGuesses: PropTypes.number.isRequired,\n  onGameOver: PropTypes.func.isRequired,\n};\n\nexport default Gameboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}