{"ast":null,"code":"import _regeneratorRuntime from\"/home/vkamineni/Documents/LightHall/level3/vikas_hangman/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/home/vkamineni/Documents/LightHall/level3/vikas_hangman/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _toConsumableArray from\"/home/vkamineni/Documents/LightHall/level3/vikas_hangman/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/home/vkamineni/Documents/LightHall/level3/vikas_hangman/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from\"react\";import{useNavigate}from'react-router-dom';import UsernameForm from\"./UsernameForm\";import\"./Gameboard.css\";import{db}from'../base';import{collection,addDoc}from'firebase/firestore';import NavBar from\"./NavBar\";import{decode}from\"base-64\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Gameboard=function Gameboard(_ref){var maxGuesses=_ref.maxGuesses,onGameOver=_ref.onGameOver;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),word=_useState2[0],setWord=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),guesses=_useState4[0],setGuesses=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),correctGuesses=_useState6[0],setCorrectGuesses=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),incorrectGuesses=_useState8[0],setInCorrectGuesses=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),gameOver=_useState10[0],setGameOver=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),gameResult=_useState12[0],setGameResult=_useState12[1];// initially game is not won\nvar _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),isComplete=_useState14[0],setIsComplete=_useState14[1];var _useState15=useState(maxGuesses),_useState16=_slicedToArray(_useState15,2),remainingGuesses=_useState16[0],setRemainingGuesses=_useState16[1];var _useState17=useState(\"\"),_useState18=_slicedToArray(_useState17,2),username=_useState18[0],setUsername=_useState18[1];var _useState19=useState(\"NotStarted\"),_useState20=_slicedToArray(_useState19,2),gameStatus=_useState20[0],setGameStatus=_useState20[1];var _useState21=useState(false),_useState22=_slicedToArray(_useState21,2),fromUrl=_useState22[0],setFromUrl=_useState22[1];var _useState23=useState(0),_useState24=_slicedToArray(_useState23,2),score=_useState24[0],setScore=_useState24[1];var navigate=useNavigate();var _useState25=useState([\"/images/0.jpg\",\"/images/1.jpg\",\"/images/2.jpg\",\"/images/3.jpg\",\"/images/4.jpg\",\"/images/5.jpg\",\"/images/6.jpg\"]),_useState26=_slicedToArray(_useState25,2),hangmanImages=_useState26[0],setHangmanImages=_useState26[1];useEffect(function(){var urlParams=new URLSearchParams(window.location.search);var url_word=urlParams.get('word');if(url_word){setWord(decode(url_word).toLowerCase());setFromUrl(true);}else if(!word){fetch(\"https://random-word-api.herokuapp.com/word?number=1\").then(function(response){return response.json();}).then(function(data){return setWord(data[0].toLowerCase());}).catch(function(error){return console.log(error);});}if(remainingGuesses===0){setGameResult(false);setGameOver(true);}else if(remainingGuesses>=1&&isComplete){setGameResult(true);setScore(score+remainingGuesses*10);}},[guesses,isComplete]);useEffect(function(){},[]);var handleGuess=function handleGuess(event){var guess=event.target.value.toLowerCase();var button=event.target;if(!guess){return;}var updatedGuesses=guesses;var updatedCorrectGuesses=correctGuesses;var updatedIncorrectGuesses=incorrectGuesses;var updatedRemainingGuesses=remainingGuesses;// let updatedHangmanImages = hangmanImages;\nif(!guesses.includes(guess)){updatedGuesses=[].concat(_toConsumableArray(updatedGuesses),[guess]);setGuesses(updatedGuesses);if(!word.includes(guess)){updatedIncorrectGuesses=[].concat(_toConsumableArray(updatedIncorrectGuesses),[guess]);updatedRemainingGuesses=updatedRemainingGuesses-1;setInCorrectGuesses(updatedIncorrectGuesses);setRemainingGuesses(updatedRemainingGuesses);score-10<0?setScore(0):setScore(score-10);}else{updatedCorrectGuesses=[].concat(_toConsumableArray(updatedCorrectGuesses),[guess]);setCorrectGuesses(updatedCorrectGuesses);setScore(score+10);}}// checkWordComplete();\nvar isComplete=word.split(\"\").every(function(letter){return updatedCorrectGuesses.includes(letter);});if(updatedRemainingGuesses===0&&!isComplete){setGameOver(true);return;}if(updatedRemainingGuesses>=1&&isComplete){setIsComplete(true);return;}button.classList.add(\"disabled\");};var handleReset=function handleReset(){setWord(\"\");setGuesses([]);setCorrectGuesses([]);setInCorrectGuesses([]);setGameOver(false);setGameResult(false);setIsComplete(false);setRemainingGuesses(maxGuesses);onGameOver(false);var buttons=document.querySelectorAll(\"button\");buttons.forEach(function(button){button.classList.remove(\"disabled\");// re-enable the buttons\n});if(fromUrl){navigate(\"/gameboard\");window.location.reload();}};var renderWord=function renderWord(){return word.split(\"\").map(function(letter,index){return/*#__PURE__*/_jsx(\"div\",{className:\"Gameboard-letter-box\",children:guesses.includes(letter)?/*#__PURE__*/_jsx(\"span\",{className:\"Gameboard-letter\",children:letter}):/*#__PURE__*/_jsx(\"span\",{className:\"Gameboard-letter\",children:\"_\"})},index);});};var handleUsernameSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:if(!(username.trim()===\"\")){_context.next=3;break;}alert(\"Please enter a valid username\");return _context.abrupt(\"return\");case 3:_context.next=5;return addDoc(collection(db,\"users\"),{name:username,score:score});case 5:navigate(\"/leaderboard\");case 6:case\"end\":return _context.stop();}},_callee);}));return function handleUsernameSubmit(){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"div\",{className:\"GameBoard-Container\",children:/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",flexDirection:\"column\",width:\"100%\"},children:[/*#__PURE__*/_jsx(NavBar,{navigateToGameBoard:function navigateToGameBoard(){navigate(\"/gameboard\");},navigateToLeaderBoard:function navigateToLeaderBoard(){navigate(\"/leaderboard\");},navigateToChallenge:function navigateToChallenge(){navigate(\"/challenge\");},navigateToHome:function navigateToHome(){navigate(\"/\");}}),/*#__PURE__*/_jsx(\"div\",{className:\"GameBoardInfo d-flex justify-content-center align-items-center\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex flex-grow-1 justify-content-center\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"px-3 gameboard-info-box\",style:{color:\"darkgray\",marginRight:\"10px\"},children:[\"Chances left: \",remainingGuesses]}),/*#__PURE__*/_jsxs(\"span\",{className:\"px-3 gameboard-info-box\",style:{color:\"darkgray\"},children:[\"Score: \",score]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"Gameboard\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"Hangman\",children:/*#__PURE__*/_jsx(\"img\",{src:hangmanImages[6-remainingGuesses],alt:\"Hangman\",style:{backgroundColor:\"black\",borderRadius:\"10px\"}})}),/*#__PURE__*/_jsx(\"div\",{className:\"Gameboard-word\",children:renderWord()}),/*#__PURE__*/_jsx(\"div\",{className:\"Gameboard-guesses\",children:gameOver?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"p\",{children:\"Game Lost !!!!!!\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"The word was \\\"\",word,\"\\\".\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Score: \",score]}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary\",onClick:handleReset,children:\"Try Again\"})]}):/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"div\",{className:\"Gameboard-buttons\",children:Array.from({length:26},function(_,index){return String.fromCharCode(97+index);}).map(function(letter){return/*#__PURE__*/_jsx(\"button\",{value:letter,onClick:handleGuess,disabled:guesses.includes(letter),children:letter},letter);})})})}),gameResult&&/*#__PURE__*/_jsx(\"div\",{className:\"popup\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"popup-content\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Congratulations!\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"You have guessed the word \\\"\",word,\"\\\".\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Score: \",score]}),/*#__PURE__*/_jsxs(\"span\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:username,onChange:function onChange(e){return setUsername(e.target.value);},placeholder:\"Enter Name for leaderboard\",className:\"username-input\"// Add a class name for styling\n}),/*#__PURE__*/_jsx(\"button\",{onClick:handleUsernameSubmit,className:\"submit-btn\",children:\"Save Score\"})]}),fromUrl?/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary\",onClick:handleReset,children:\"Play New Game\"}):/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary\",onClick:handleReset,children:\"Play Again\"})]})})]})]})})});};export default Gameboard;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","UsernameForm","db","collection","addDoc","NavBar","decode","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Gameboard","_ref","maxGuesses","onGameOver","_useState","_useState2","_slicedToArray","word","setWord","_useState3","_useState4","guesses","setGuesses","_useState5","_useState6","correctGuesses","setCorrectGuesses","_useState7","_useState8","incorrectGuesses","setInCorrectGuesses","_useState9","_useState10","gameOver","setGameOver","_useState11","_useState12","gameResult","setGameResult","_useState13","_useState14","isComplete","setIsComplete","_useState15","_useState16","remainingGuesses","setRemainingGuesses","_useState17","_useState18","username","setUsername","_useState19","_useState20","gameStatus","setGameStatus","_useState21","_useState22","fromUrl","setFromUrl","_useState23","_useState24","score","setScore","navigate","_useState25","_useState26","hangmanImages","setHangmanImages","urlParams","URLSearchParams","window","location","search","url_word","get","toLowerCase","fetch","then","response","json","data","catch","error","console","log","handleGuess","event","guess","target","value","button","updatedGuesses","updatedCorrectGuesses","updatedIncorrectGuesses","updatedRemainingGuesses","includes","concat","_toConsumableArray","split","every","letter","classList","add","handleReset","buttons","document","querySelectorAll","forEach","remove","reload","renderWord","map","index","className","children","handleUsernameSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","trim","alert","abrupt","name","stop","apply","arguments","style","display","flexDirection","width","navigateToGameBoard","navigateToLeaderBoard","navigateToChallenge","navigateToHome","color","marginRight","src","alt","backgroundColor","borderRadius","onClick","Array","from","length","_","String","fromCharCode","disabled","type","onChange","e","placeholder"],"sources":["/home/vkamineni/Documents/LightHall/level3/vikas_hangman/src/components/gameboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {useNavigate} from 'react-router-dom'\nimport UsernameForm from \"./UsernameForm\";\nimport PropTypes from \"prop-types\";\nimport \"./Gameboard.css\";\nimport {db} from '../base';\nimport {collection, addDoc} from 'firebase/firestore'\nimport NavBar from \"./NavBar\";\nimport { decode } from \"base-64\";\n\nconst Gameboard = ({ maxGuesses, onGameOver }) => {\n  const [word, setWord] = useState(\"\");\n  const [guesses, setGuesses] = useState([]);\n  const [correctGuesses, setCorrectGuesses] = useState([]);\n  const [incorrectGuesses, setInCorrectGuesses] = useState([]);\n  const [gameOver, setGameOver] = useState(false);\n  const [gameResult, setGameResult] = useState(false); // initially game is not won\n  const [isComplete, setIsComplete] = useState(false);\n  const [remainingGuesses, setRemainingGuesses] = useState(maxGuesses);\n  const [username,  setUsername] = useState(\"\");\n  const [gameStatus, setGameStatus] = useState(\"NotStarted\");\n  const [fromUrl, setFromUrl] = useState(false);\n  const [score, setScore] = useState(0);\n  const navigate = useNavigate();\n\n  const [hangmanImages, setHangmanImages] = useState([  \"/images/0.jpg\",  \"/images/1.jpg\",  \"/images/2.jpg\",  \"/images/3.jpg\",  \"/images/4.jpg\",  \"/images/5.jpg\",  \"/images/6.jpg\",]);\n\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const url_word = urlParams.get('word');\n    if (url_word) {\n      setWord(decode(url_word).toLowerCase());\n      setFromUrl(true);\n    }\n    else if (!word) {\n      fetch(\"https://random-word-api.herokuapp.com/word?number=1\")\n        .then((response) => response.json())\n        .then((data) => setWord(data[0].toLowerCase()))\n        .catch((error) => console.log(error));\n    }\n\n    if(remainingGuesses === 0) {\n      setGameResult(false);\n      setGameOver(true);\n    }\n    else if(remainingGuesses >= 1 && isComplete) {\n      setGameResult(true);\n      setScore(score + remainingGuesses * 10);\n    }\n  }, [guesses, isComplete]);\n\n  useEffect(() => {\n\n  }, [])\n\n  const handleGuess = (event) => {\n    const guess = event.target.value.toLowerCase();\n    const button = event.target;\n\n    if (!guess) {\n      return;\n    }\n\n    let updatedGuesses = guesses;\n    let updatedCorrectGuesses = correctGuesses;\n    let updatedIncorrectGuesses = incorrectGuesses;\n    let updatedRemainingGuesses = remainingGuesses;\n    // let updatedHangmanImages = hangmanImages;\n\n    if (!guesses.includes(guess)) {\n      updatedGuesses = [...updatedGuesses, guess];\n      setGuesses(updatedGuesses);\n\n      if (!word.includes(guess)) {\n        updatedIncorrectGuesses = [...updatedIncorrectGuesses, guess];\n        updatedRemainingGuesses = updatedRemainingGuesses - 1;\n        setInCorrectGuesses(updatedIncorrectGuesses);\n        setRemainingGuesses(updatedRemainingGuesses);\n        score - 10 < 0 ? setScore(0) : setScore(score-10);\n      }\n      else {\n        updatedCorrectGuesses = [...updatedCorrectGuesses, guess];\n        setCorrectGuesses(updatedCorrectGuesses);\n        setScore(score + 10);\n      }\n    }\n\n    // checkWordComplete();\n    let isComplete = word.split(\"\").every((letter) => updatedCorrectGuesses.includes(letter));\n\n    if(updatedRemainingGuesses === 0 && !isComplete) {\n      setGameOver(true);\n      return;\n    }\n\n    if(updatedRemainingGuesses >= 1 && isComplete) {\n      setIsComplete(true);\n      return;\n    }\n\n    button.classList.add(\"disabled\");\n  };\n\n  const handleReset = () => {\n    setWord(\"\");\n    setGuesses([]);\n    setCorrectGuesses([]);\n    setInCorrectGuesses([]);\n    setGameOver(false);\n    setGameResult(false);\n    setIsComplete(false);\n    setRemainingGuesses(maxGuesses);\n    onGameOver(false);\n    const buttons = document.querySelectorAll(\"button\");\n    buttons.forEach((button) => {\n      button.classList.remove(\"disabled\"); // re-enable the buttons\n    });\n    if (fromUrl) {\n      navigate(\"/gameboard\");\n      window.location.reload();\n    }\n  };\n\n  const renderWord = () => {\n    return word.split(\"\").map((letter, index) => (\n      <div key={index} className=\"Gameboard-letter-box\">\n        {guesses.includes(letter) ? (\n          <span className=\"Gameboard-letter\">{letter}</span>\n        ) : (\n          <span className=\"Gameboard-letter\">_</span>\n        )}\n      </div>\n    ));\n  };\n\n  const handleUsernameSubmit = async () => {\n    if (username.trim() === \"\") {\n      alert(\"Please enter a valid username\");\n      return;\n    }\n    \n    await addDoc(collection(db, \"users\"), {\n      name: username,\n      score: score\n    });\n\n    navigate(\"/leaderboard\");\n  };\n\n  return (\n    <>\n      <div className=\"GameBoard-Container\">\n        <div style={{ display: \"flex\", flexDirection: \"column\", width: \"100%\" }}>\n          <NavBar \n          navigateToGameBoard={() => {navigate(\"/gameboard\")}}\n          navigateToLeaderBoard={() => {navigate(\"/leaderboard\")}}\n          navigateToChallenge={() => {navigate(\"/challenge\")}}\n          navigateToHome={() => {navigate(\"/\")}}/>\n          <div className=\"GameBoardInfo d-flex justify-content-center align-items-center\">\n            <div className=\"d-flex flex-grow-1 justify-content-center\">\n              <span className=\"px-3 gameboard-info-box\" style={{color: \"darkgray\", marginRight: \"10px\"}}>Chances left: {remainingGuesses}</span>\n              <span className=\"px-3 gameboard-info-box\" style={{color: \"darkgray\"}}>Score: {score}</span>\n            </div>\n          </div>\n          <div className=\"Gameboard\">\n            <div className=\"Hangman\">\n              <img src={hangmanImages[6 - remainingGuesses]} alt=\"Hangman\" style={{backgroundColor: \"black\", borderRadius: \"10px\"}}/>\n            </div>\n            <div className=\"Gameboard-word\">{renderWord()}</div>\n            <div className=\"Gameboard-guesses\">\n              {gameOver ? (\n                <>\n                  <p>Game Lost !!!!!!</p>\n                  <p>The word was \"{word}\".</p>\n                  <p>Score: {score}</p>\n                  <button className=\"btn btn-primary\" onClick={handleReset}>Try Again</button>\n                </>\n              ) : (\n                <>\n                  <div className=\"Gameboard-buttons\">\n                    {Array.from({ length: 26 }, (_, index) => String.fromCharCode(97 + index)).map((letter) => (\n                      <button key={letter} value={letter} onClick={handleGuess} disabled={guesses.includes(letter)}>\n                        {letter}\n                      </button>\n                    ))}\n                  </div>\n                </>\n              )}\n            </div>\n            {gameResult && \n              <div className=\"popup\">\n                <div className=\"popup-content\">\n                  <h2>Congratulations!</h2>\n                  <p>You have guessed the word \"{word}\".</p>\n                  <p>Score: {score}</p>\n                  <span>\n                    <input \n                      type=\"text\" \n                      value={username} \n                      onChange={(e) => setUsername(e.target.value)} \n                      placeholder=\"Enter Name for leaderboard\" \n                      className=\"username-input\" // Add a class name for styling\n                    />\n                    <button onClick={handleUsernameSubmit} className=\"submit-btn\">Save Score</button>\n                  </span>\n                  {fromUrl ?\n                    <button className=\"btn btn-primary\" onClick={handleReset}>Play New Game</button>\n                    :                \n                    <button className=\"btn btn-primary\" onClick={handleReset}>Play Again</button>\n                  }\n                </div>\n              </div>\n            }\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nGameboard.propTypes = {\n  maxGuesses: PropTypes.number.isRequired,\n  onGameOver: PropTypes.func.isRequired,\n};\n\nexport default Gameboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}